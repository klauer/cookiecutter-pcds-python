language: python
dist: xenial
{% if cookiecutter.use_x11_on_travis == "yes" %}
sudo: true
{% else %}
sudo: false
{% endif %}

env: 
   global:
      - OFFICIAL_REPO="{{ cookiecutter.github_repo_group }}/{{ cookiecutter.repo_name }}"
      - BUILD_DOCS=1
      {% if cookiecutter.use_doctr == "yes" %}
      - secure: ""
      {% endif %}

cache:
  directories:
    - $HOME/.cache/pip
    - $HOME/.ccache  # https://github.com/travis-ci/travis-ci/issues/5853

matrix:
  include:
    - python: 3.6
      env:
        - CONDA_UPLOAD=1
        - PCDS_CHANNEL=pcds-tag
    - python: 3.6
      env: PCDS_CHANNEL=pcds-dev
    - python: 3.7
      env: PCDS_CHANNEL=pcds-tag
    - python: 3.7
      env: PCDS_CHANNEL=pcds-dev
  allow_failures:
    - python: 3.7
      env: PCDS_CHANNEL=pcds-tag
    - python: 3.7
      env: PCDS_CHANNEL=pcds-dev

install:
  - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda conda-build
  - conda config --append channels $PCDS_CHANNEL
  - conda config --append channels conda-forge
  # Useful for debugging any issues with conda
  - conda info -a
  # Test conda build
  - conda build -q conda-recipe --python=$TRAVIS_PYTHON_VERSION --output-folder bld-dir
  - conda config --add channels "file://`pwd`/bld-dir"
  - conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION {{ cookiecutter.repo_name }} --file dev-requirements.txt
  - source activate test-environment

  - pip install -Ur requirements.txt
  - pip install -e .

{% if cookiecutter.use_x11_on_travis == "yes" %}
before_script:
  - sudo apt-get update
  # Install window manager
  - sudo apt-get install -y xvfb herbstluftwm
  # Taken from docs.travis-ci.com/user/gui-and-headless-browsers
  - "export DISPLAY=:99.0"
  - "/sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 1920x1200x24 -ac +extension GLX +render -noreset"
  - sleep 3 # give xvfb some time to start
  # Run windows manager
  - "herbstluftwm &"
  - sleep 1
{% endif %}

script:
  - flake8 {{ cookiecutter.repo_name }}
  - coverage run run_tests.py
  - set -e
  {% if cookiecutter.use_doctr == "yes" %}
  - |
    if [[ -n "$DOCTR_DEPLOY_ENCRYPTION_KEY_{{ cookiecutter.github_repo_group.upper().replace('-','_') }}_{{ cookiecutter.repo_name.upper() }}" && $BUILD_DOCS ]]; then
      # Create HTML documentation  
      pip install -Ur docs-requirements.txt
      pushd docs
      make html
      popd
      #Publish docs.
      doctr deploy . --built-docs docs/build/html --deploy-branch-name gh-pages --command "touch .nojekyll; git add .nojekyll"
    fi
   {% endif %}

after_success:
  - coverage report -m
  - codecov

  - |
    if [[ $TRAVIS_PULL_REQUEST == false && $TRAVIS_REPO_SLUG == $OFFICIAL_REPO && "$CONDA_UPLOAD" == "1" ]]; then
      if [[ $TRAVIS_BRANCH == $TRAVIS_TAG  && $TRAVIS_TAG != '' && $PCDS_CHANNEL == 'pcds-tag' ]]; then
        export ANACONDA_API_TOKEN=$CONDA_UPLOAD_TOKEN_TAG
        anaconda upload bld-dir/linux-64/*.tar.bz2
      elif [[ $TRAVIS_BRANCH == 'master' && $TRAVIS_TAG == '' && $PCDS_CHANNEL == 'pcds-dev' ]]; then
        export ANACONDA_API_TOKEN=$CONDA_UPLOAD_TOKEN_DEV
        anaconda upload bld-dir/linux-64/*.tar.bz2
      fi
    fi
